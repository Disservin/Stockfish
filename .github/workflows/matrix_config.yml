name: Matrix Generator
on:
  workflow_call:
jobs:
  Stockfish:
    # name: ${{ matrix.config.name }} ${{ matrix.binaries }}
    # runs-on: ${{ matrix.config.os }}
    # env:
    #   COMPILER: ${{ matrix.config.compiler }}
    #   COMP: ${{ matrix.config.comp }}
    #   EXT: ${{ matrix.config.ext }}
    #   SDE: ${{ matrix.config.sde }}
    #   NAME: ${{ matrix.config.simple_name }}
    #   BINARY: ${{ matrix.binaries }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Ubuntu 20.04 GCC
            os: ubuntu-20.04
            simple_name: ubuntu
            compiler: g++
            comp: gcc
            shell: bash
            archive_ext: tar
            sde: /home/runner/work/Stockfish/Stockfish/.output/sde-temp-files/sde-external-9.27.0-2023-09-13-lin/sde -future --
          - name: MacOS 13 Apple Clang
            os: macos-13
            simple_name: macos
            compiler: clang++
            comp: clang
            shell: bash
            archive_ext: tar
          - name: MacOS 14 Apple Clang M1
            os: macos-14
            simple_name: macos-m1
            compiler: clang++
            comp: clang
            shell: bash
            archive_ext: tar
          - name: Windows 2022 Mingw-w64 GCC x86_64
            os: windows-2022
            simple_name: windows
            compiler: g++
            comp: mingw
            msys_sys: mingw64
            msys_env: x86_64-gcc
            shell: msys2 {0}
            ext: .exe
            sde: /d/a/Stockfish/Stockfish/.output/sde-temp-files/sde-external-9.27.0-2023-09-13-win/sde.exe -future --
            archive_ext: zip
        binaries:
          - x86-64
          - x86-64-sse41-popcnt
          - x86-64-avx2
          - x86-64-bmi2
          - x86-64-avxvnni
          - x86-64-avx512
          - x86-64-vnni256
          - x86-64-vnni512
          - apple-silicon
        exclude:
          # Apple M1
          - binaries: x86-64
            config: { os: macos-14 }
          - binaries: x86-64-sse41-popcnt
            config: { os: macos-14 }
          - binaries: x86-64-avx2
            config: { os: macos-14 }
          - binaries: x86-64-bmi2
            config: { os: macos-14 }
          - binaries: x86-64-avxvnni
            config: { os: macos-14 }
          - binaries: x86-64-avxvnni
            config: { os: macos-14 }
          - binaries: x86-64-avx512
            config: { os: macos-14 }
          - binaries: x86-64-vnni256
            config: { os: macos-14 }
          - binaries: x86-64-vnni512
            config: { os: macos-14 }

          - binaries: x86-64-avxvnni
            config: { ubuntu-20.04 }

          # Apple x86_64 (no sde)
          - binaries: x86-64-avxvnni
            config: { os: macos-13 }
          - binaries: x86-64-avx512
            config: { os: macos-13 }
          - binaries: x86-64-vnni256
            config: { os: macos-13 }
          - binaries: x86-64-vnni512
            config: { os: macos-13 }

          # Apple silicon from windows, macos-13 and ubuntu
          - binaries: apple-silicon
            config: { os: windows-2022 }
          - binaries: apple-silicon
            config: { os: macos-13 }
          - binaries: apple-silicon
            config: { os: ubuntu-20.04 }
    uses: ./.github/workflows/test.yml
    with:
      os: ${{ matrix.config.os }}
      compiler: ${{ matrix.config.compiler }}
      comp: ${{ matrix.config.comp }}
      ext: ${{ matrix.config.ext }}
      sde: ${{ matrix.config.sde }}
      archive_ext: ${{ matrix.config.archive_ext }}
      msys_sys: ${{ matrix.config.msys_sys }}
      msys_env: ${{ matrix.config.msys_env }}
      simple_name: ${{ matrix.config.simple_name }}
      binary: ${{ matrix.binaries }}
      name: ${{ matrix.config.name }}
      shell: ${{ matrix.config.shell }}
      binaries: ${{ matrix.binaries }}
